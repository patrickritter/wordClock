var h=Object.defineProperty;var u=(t,e,s)=>e in t?h(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var c=(t,e,s)=>u(t,typeof e!="symbol"?e+"":e,s);import{c as f}from"./main-9KR0b-6A.js";class p{constructor(){c(this,"tests",[]);c(this,"passed",0);c(this,"failed",0)}test(e,s){this.tests.push({name:e,testFunction:s})}assert(e,s){if(!e)throw new Error(s)}assertEquals(e,s,n){if(e!==s)throw new Error(`${n} - Expected: ${s}, Actual: ${e}`)}assertArrayEquals(e,s,n){if(JSON.stringify(e)!==JSON.stringify(s))throw new Error(`${n} - Expected: ${JSON.stringify(s)}, Actual: ${JSON.stringify(e)}`)}runTests(){console.log("ðŸ§ª Starting Wortuhr Tests..."),this.tests.forEach(e=>{try{e.testFunction(),this.passed++,this.addTestResult(e.name,!0,"Test passed")}catch(s){this.failed++,this.addTestResult(e.name,!1,s.message)}}),this.showSummary()}addTestResult(e,s,n){const o=this.getTestContainer(e),a=document.createElement("div");a.className=`test-item ${s?"pass":"fail"}`,a.innerHTML=`
      <div class="test-name">${e}</div>
      <div class="test-expected">${n}</div>
    `,o.appendChild(a)}getTestContainer(e){return e.includes("Stunde")?document.getElementById("hour-tests"):e.includes("Minute")?document.getElementById("minute-tests"):document.getElementById("time-tests")}showSummary(){const e=document.getElementById("test-summary"),s=this.passed+this.failed,n=(this.passed/s*100).toFixed(1);e.innerHTML=`
      <h3>Test-Zusammenfassung</h3>
      <p><strong>Gesamt:</strong> ${s} Tests</p>
      <p><strong>Bestanden:</strong> <span style="color: #28a745;">${this.passed}</span></p>
      <p><strong>Fehlgeschlagen:</strong> <span style="color: #dc3545;">${this.failed}</span></p>
      <p><strong>Erfolgsrate:</strong> ${n}%</p>
    `,console.log(`âœ… Tests completed: ${this.passed}/${s} passed (${n}%)`)}}function l(t,e){const s=[];s.push("es","ist"),e>=0&&e<5?s.push("uhr"):e>=5&&e<10?s.push("fuenf1","nach"):e>=10&&e<15?s.push("zehn1","nach"):e>=15&&e<20?s.push("viertel","nach"):e>=20&&e<25?s.push("zwanzig","nach"):e>=25&&e<30?s.push("fuenf1","vor","halb"):e>=30&&e<35?s.push("halb"):e>=35&&e<40?s.push("fuenf1","nach","halb"):e>=40&&e<45?s.push("zwanzig","vor"):e>=45&&e<50?s.push("viertel","vor"):e>=50&&e<55?s.push("zehn1","vor"):e>=55&&s.push("fuenf1","vor");const n=f(t,e),a={1:"eins",2:"zwei",3:"drei",4:"vier",5:"fuenf2",6:"sechs",7:"sieben",8:"acht",9:"neun",10:"zehn2",11:"elf",12:"zwoelf"}[n];return a&&s.push(a),s}function E(){const t=new p;t.test("Stunde 1 (01:00)",()=>{const e=l(1,0);t.assert(e.includes("eins"),'Stunde 1 sollte "eins" enthalten'),t.assert(e.includes("uhr"),'Genau sollte "uhr" enthalten')}),t.test("Stunde 12 (12:00)",()=>{const e=l(12,0);t.assert(e.includes("zwoelf"),'Stunde 12 sollte "zwoelf" enthalten')}),t.test("Stunde 22 â†’ 10 (22:20)",()=>{const e=l(22,20);t.assert(e.includes("zehn2"),'22 Uhr sollte als "zehn" angezeigt werden')}),t.test("Stunde 0 â†’ 12 (00:30)",()=>{const e=l(0,30);t.assert(e.includes("zwoelf"),'0 Uhr sollte als "zwoelf" angezeigt werden')}),t.test("Minuten 0-4 (genau)",()=>{const e=l(10,2);t.assert(e.includes("uhr"),'0-4 Minuten sollte "uhr" enthalten'),t.assert(!e.includes("nach"),'0-4 Minuten sollte nicht "nach" enthalten'),t.assert(!e.includes("vor"),'0-4 Minuten sollte nicht "vor" enthalten')}),t.test("Minuten 5-9 (fÃ¼nf nach)",()=>{const e=l(10,7);t.assert(e.includes("fuenf1"),'5-9 Minuten sollte "fuenf1" enthalten'),t.assert(e.includes("nach"),'5-9 Minuten sollte "nach" enthalten')}),t.test("Minuten 15-19 (viertel nach)",()=>{const e=l(10,17);t.assert(e.includes("viertel"),'15-19 Minuten sollte "viertel" enthalten'),t.assert(e.includes("nach"),'15-19 Minuten sollte "nach" enthalten')}),t.test("Minuten 20-24 (zwanzig nach)",()=>{const e=l(10,22);t.assert(e.includes("zwanzig"),'20-24 Minuten sollte "zwanzig" enthalten'),t.assert(e.includes("nach"),'20-24 Minuten sollte "nach" enthalten')}),t.test("Minuten 30-34 (halb)",()=>{const e=l(10,32);t.assert(e.includes("halb"),'30-34 Minuten sollte "halb" enthalten'),t.assert(!e.includes("nach"),'30-34 Minuten sollte nicht "nach" enthalten'),t.assert(!e.includes("vor"),'30-34 Minuten sollte nicht "vor" enthalten')}),t.test("Minuten 45-49 (viertel vor)",()=>{const e=l(10,47);t.assert(e.includes("viertel"),'45-49 Minuten sollte "viertel" enthalten'),t.assert(e.includes("vor"),'45-49 Minuten sollte "vor" enthalten')}),t.test("Minuten 55-59 (fÃ¼nf vor)",()=>{const e=l(10,57);t.assert(e.includes("fuenf1"),'55-59 Minuten sollte "fuenf1" enthalten'),t.assert(e.includes("vor"),'55-59 Minuten sollte "vor" enthalten')}),t.test("14:00 - ES IST ZWEI UHR",()=>{const e=l(14,0);["es","ist","zwei","uhr"].forEach(n=>{t.assert(e.includes(n),`14:00 sollte "${n}" enthalten`)})}),t.test("14:15 - ES IST VIERTEL NACH ZWEI",()=>{const e=l(14,15);["es","ist","viertel","nach","zwei"].forEach(n=>{t.assert(e.includes(n),`14:15 sollte "${n}" enthalten`)})}),t.test("14:30 - ES IST HALB DREI",()=>{const e=l(14,30);["es","ist","halb","drei"].forEach(n=>{t.assert(e.includes(n),`14:30 sollte "${n}" enthalten`)})}),t.test("14:45 - ES IST VIERTEL VOR DREI",()=>{const e=l(14,45);["es","ist","viertel","vor","drei"].forEach(n=>{t.assert(e.includes(n),`14:45 sollte "${n}" enthalten`)})}),t.test("22:20 - ES IST ZWANZIG NACH ZEHN",()=>{const e=l(22,20);["es","ist","zwanzig","nach","zehn2"].forEach(n=>{t.assert(e.includes(n),`22:20 sollte "${n}" enthalten`)})}),t.test("23:55 - ES IST FÃœNF VOR ZWÃ–LF",()=>{const e=l(23,55);["es","ist","fuenf1","vor","zwoelf"].forEach(n=>{t.assert(e.includes(n),`23:55 sollte "${n}" enthalten`)})}),t.runTests(),v()}function v(){const t=[{time:"14:00",hours:14,minutes:0,expected:"ES IST ZWEI UHR"},{time:"14:15",hours:14,minutes:15,expected:"ES IST VIERTEL NACH ZWEI"},{time:"14:30",hours:14,minutes:30,expected:"ES IST HALB DREI"},{time:"22:20",hours:22,minutes:20,expected:"ES IST ZWANZIG NACH ZEHN"}];let e=0;function s(){const n=t[e];document.getElementById("test-time").textContent=n.time,document.getElementById("display-text").textContent=n.expected;const o=document.getElementById("clock-preview");o.innerHTML="";const a=l(n.hours,n.minutes);["ES","IST","ZEHN","FÃœNF","VIERTEL","MINUTEN","VOR","NACH","HALB","EINS","SIEBEN","ZWEI","DREI","VIER","ACHT","FÃœNF","ZWÃ–LF","ZEHN","ELF","NEUN","SECHS","ZWANZIG","UHR"].forEach(i=>{const r=document.createElement("span");r.className="word",r.textContent=i;const d=i.toLowerCase().replace("Ã¤","ae").replace("Ã¶","oe");a.includes(d)&&r.classList.add("active"),o.appendChild(r)}),e=(e+1)%t.length}s(),setInterval(s,3e3)}document.addEventListener("DOMContentLoaded",E);
